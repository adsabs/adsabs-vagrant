# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

#Not possible to use CLI/ARGV arguments without writing a separate plugin.
#Therefore, must fall back to using environmental variables =(
options = {}
options[:adsabs_source] = ENV['VAGRANT_ADSABS_SOURCE'] || 'http://github.com/adsabs/adsabs.git'
options[:adsabs_revision] = ENV['VAGRANT_ADSABS_REVISION'] || 'master'

puts "NOTICE:"
puts "Beer will be cloned from #{options[:adsabs_source]} (#{options[:adsabs_revision]})"
puts "This can be changed by setting VAGRANT_ADSABS_SOURCE and VAGRANT_ADSABS_REVISION"
puts ""

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "precise64-adsabs-vagrant-virtualbox"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
   config.vm.box_url = "https://oss-binaries.phusionpassenger.com/vagrant/boxes/ubuntu-12.04.3-amd64-vbox.box"

  config.vm.provider "virtualbox" do |v|
    v.memory = 1000
    v.cpus = 2
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

        #solr1, solr2
      config.vm.network :forwarded_port, guest: 8983, host: 8983
      config.vm.network :forwarded_port, guest: 8984, host: 8984
        #zookeeper1
      config.vm.network :forwarded_port, guest: 2888, host: 2888
        #beer devel server
      config.vm.network :forwarded_port, guest: 5000, host: 5000


        #This allows the guest machine to access the host directly via the IP address 192.168.50.1
        #If you want to connect to solr:9000 from the guest, do the following:
        # set up tunnels on host
        # set up tunnels on VM to host (ssh -N -f -L 9000:localhost:9000 user@192.168.50.1)
        # localhost:9000 on both host and VM now point to solr:9000
      config.vm.network "private_network", ip: "192.168.50.4"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
   #config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
    config.vm.synced_folder ".", "/vagrant/"
    config.vm.synced_folder "./proj/", "/proj/ads/"

  config.vm.provision "docker" do |docker|
    docker.build_image "/vagrant/dockerfiles/mongo",
      args: "-t adsabs/mongo"
    docker.run "adsabs/mongo",
      args: "--name mongo -p 27017:27017",
      daemonize: true
  end

#  config.vm.provision "docker" do |docker|
#    docker.build_image "/vagrant/dockerfiles/montysolr",
#      args: "-t adsabs/montysolr"
#    docker.run "adsabs/montysolr",
#      args: "--name montysolr -p 9000:9000",
#      daemonize: true
#  end

  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "manifests"
    puppet.manifest_file  = "site.pp"
    puppet.facter = {
      "adsabs_source" => options[:adsabs_source],
      "adsabs_revision" => options[:adsabs_revision]
    }
  end

  config.vm.provision "shell", inline: "cd /vagrant/dockerfiles/zookeeper && /bin/bash run.sh"
  config.vm.provision "shell", inline: "cd /vagrant/dockerfiles/solr && /bin/bash vagrant_build.sh"


end
